# Generated by Django 5.2 on 2025-05-13 17:31

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('PlaterBuilder', '0003_processmap'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProcessMapEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_number', models.CharField(max_length=10)),
                ('process_step', models.IntegerField()),
                ('process', models.CharField(max_length=200)),
                ('dwell_time', models.IntegerField(blank=True, help_text='Standard dwell time in seconds', null=True)),
                ('min_dwell_time', models.IntegerField(blank=True, help_text='Minimum dwell time in seconds', null=True)),
                ('max_dwell_time', models.IntegerField(blank=True, help_text='Maximum dwell time in seconds', null=True)),
                ('drip_time', models.IntegerField(default=0, help_text='Time to allow for dripping after lifting (seconds)')),
                ('tank_length', models.FloatField(default=0.0, help_text='Tank length in meters')),
                ('tank_width', models.FloatField(default=0.0, help_text='Tank width in meters')),
                ('distance_to_next', models.FloatField(default=0.0, help_text='Distance to next station in meters')),
                ('is_loading_station', models.BooleanField(default=False)),
                ('is_unloading_station', models.BooleanField(default=False)),
                ('requires_manual_handling', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_map_entries', to='PlaterBuilder.projects')),
            ],
            options={
                'verbose_name_plural': 'Process Map Entries',
                'ordering': ['process_step'],
            },
        ),
        migrations.CreateModel(
            name='ProductionGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_parts_per_hour', models.FloatField(blank=True, help_text='Target parts per hour', null=True)),
                ('target_parts_per_day', models.FloatField(blank=True, help_text='Target parts per day', null=True)),
                ('target_parts_per_week', models.FloatField(blank=True, help_text='Target parts per week', null=True)),
                ('target_parts_per_month', models.FloatField(blank=True, help_text='Target parts per month', null=True)),
                ('target_parts_per_year', models.FloatField(blank=True, help_text='Target parts per year', null=True)),
                ('primary_target', models.CharField(choices=[('hour', 'Parts Per Hour'), ('day', 'Parts Per Day'), ('week', 'Parts Per Week'), ('month', 'Parts Per Month'), ('year', 'Parts Per Year')], default='day', help_text='Primary production target timeframe', max_length=20)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='production_goal', to='PlaterBuilder.projects')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_lines', models.IntegerField(default=1, help_text='Number of parallel process lines')),
                ('has_transfer_shuttle', models.BooleanField(default=False, help_text='Whether the line has a transfer shuttle')),
                ('calculated_hoist_count', models.IntegerField(default=0, help_text='Calculated number of hoists needed')),
                ('manual_hoist_count', models.IntegerField(blank=True, help_text='Manually specified number of hoists', null=True)),
                ('hoist_speed_horizontal', models.FloatField(default=0.5, help_text='Hoist horizontal speed in meters per second')),
                ('hoist_speed_vertical', models.FloatField(default=0.2, help_text='Hoist vertical speed in meters per second')),
                ('hoist_acceleration', models.FloatField(default=0.1, help_text='Hoist acceleration in meters per secondÂ²')),
                ('transfer_time', models.IntegerField(default=10, help_text='Time to transfer between stations in seconds')),
                ('parts_per_rack', models.IntegerField(default=1, help_text='Number of parts loaded on each rack')),
                ('rack_spacing', models.FloatField(default=0.5, help_text='Minimum spacing between racks in meters')),
                ('working_hours_per_day', models.FloatField(default=8.0, help_text='Working hours per day')),
                ('working_days_per_week', models.IntegerField(default=5, help_text='Working days per week')),
                ('part_load_time', models.IntegerField(default=60, help_text='Time to load parts in seconds')),
                ('part_unload_time', models.IntegerField(default=60, help_text='Time to unload parts in seconds')),
                ('optimization_target', models.CharField(choices=[('throughput', 'Maximum Throughput'), ('hoists', 'Minimum Hoists'), ('balanced', 'Balanced Operation')], default='balanced', help_text='What to optimize for in simulation', max_length=20)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='simulation_parameters', to='PlaterBuilder.projects')),
            ],
        ),
        migrations.CreateModel(
            name='SimulationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simulation_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='Simulation Run', help_text='Name for this simulation run', max_length=100)),
                ('parts_per_hour', models.FloatField(help_text='Estimated parts produced per hour')),
                ('parts_per_day', models.FloatField(help_text='Estimated parts produced per day')),
                ('parts_per_week', models.FloatField(help_text='Estimated parts produced per week')),
                ('parts_per_month', models.FloatField(help_text='Estimated parts produced per month (based on 4 weeks)')),
                ('parts_per_year', models.FloatField(help_text='Estimated parts produced per year')),
                ('cycle_time', models.FloatField(help_text='Time to complete one full cycle in seconds')),
                ('total_process_time', models.FloatField(help_text='Sum of all process times in seconds')),
                ('total_transfer_time', models.FloatField(help_text='Sum of all transfer times in seconds')),
                ('total_drip_time', models.FloatField(help_text='Sum of all drip times in seconds')),
                ('hoist_count', models.IntegerField(help_text='Number of hoists used in simulation')),
                ('hoist_utilization', models.FloatField(help_text='Percentage of hoist utilization')),
                ('bottleneck_station', models.CharField(blank=True, help_text='Station number causing bottleneck', max_length=10, null=True)),
                ('bottleneck_description', models.TextField(blank=True, help_text='Description of bottleneck', null=True)),
                ('meets_production_goal', models.BooleanField(default=False, help_text='Whether this simulation meets production goals')),
                ('recommendations', models.TextField(blank=True, help_text='Recommendations for improvement', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the simulation', null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulation_results', to='PlaterBuilder.projects')),
            ],
            options={
                'ordering': ['-simulation_date'],
            },
        ),
        migrations.DeleteModel(
            name='ProcessMap',
        ),
    ]
